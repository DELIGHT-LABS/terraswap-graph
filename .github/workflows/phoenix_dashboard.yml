name: Dashboard server

on:
  workflow_dispatch:
  push:
    branches:
      - chore/cd
    paths-ignore:
      - "src/collector/**"

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: terraswap-graph
  ECS_CLUSTER: terraswap-graph
  ECS_SERVICE: phoenix-terraswap-graph-dashboard
  TASK_DEFINITION: phoenix-terraswap-graph-dashboard 
  CONTAINER_NAME: phoenix-terraswap-graph-dashboard

jobs:
  deploy-phoenix:
    name: Deploy Phoenix Dashboard
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.5.1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        working-directory: .
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker image push -a $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Download Task Definition
        id: download-task-definition
        working-directory: .
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.TASK_DEFINITION }} | jq '.taskDefinition' > ${{ env.TASK_DEFINITION }}.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.1.1
        with:
          task-definition: ./${{ env.TASK_DEFINITION }}.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.10
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
